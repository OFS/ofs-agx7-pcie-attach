//Copyright (C) 2021 Intel Corporation
//SPDX-License-Identifier: MIT
//===============================================================================================================
/**
 * Abstract:
 * class he_lpbk_multi_user_intr_seq is executed by he_lpbk_multi_user_intr_test 
 * 
 * This sequence verifies the functionality of the multiple user interrupts  
 * The interrupt is generated by forcing / writing the error register 
 * PBA mechanism is verified using masking and un-masking the interrupt vector
 * Sequence is running on virtual_sequencer 
 *
 *
**/
//===============================================================================================================


`ifndef HE_LPBK_MULTI_USER_INTR_SEQ_SVH
`define HE_LPBK_MULTI_USER_INTR_SEQ_SVH

class he_lpbk_multi_user_intr_seq extends he_lpbk_user_intr_seq;
    `uvm_object_utils(he_lpbk_multi_user_intr_seq)
    `uvm_declare_p_sequencer(virtual_sequencer)

    constraint loop_c { loop inside {[2:5]}; }

    function new(string name = "he_lpbk_multi_user_intr_seq");
        super.new(name);
    endfunction : new


endclass : he_lpbk_multi_user_intr_seq

`endif // HE_LPBK_MULTI_USER_INTR_SEQ_SVH
