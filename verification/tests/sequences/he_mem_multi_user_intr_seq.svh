//Copyright (C) 2021 Intel Corporation
//SPDX-License-Identifier: MIT
//===============================================================================================================
/**
 * Abstract:
 * class he_mem_multi_user_intr_seq.svh is executed by he_mem_multi_user_intr_test .
 * 
 * This sequnce verifies the functionality of the multiple user inturrputs  
 * The intruppt is generated by forcing / writing the error register .
 * PBA mechanism is verified using masking and un-masking the intruppt vector
 * Sequnce is running on virtual_sequencer .
 *
 *
**/
//===============================================================================================================



`ifndef HE_MEM_MULTI_USER_INTR_SEQ_SVH
`define HE_MEM_MULTI_USER_INTR_SEQ_SVH

class he_mem_multi_user_intr_seq extends he_mem_user_intr_seq;
    `uvm_object_utils(he_mem_multi_user_intr_seq)
    `uvm_declare_p_sequencer(virtual_sequencer)

    constraint loop_c { loop inside {[2:5]}; }

    function new(string name = "he_mem_multi_user_intr_seq");
        super.new(name);
    endfunction : new


endclass : he_mem_multi_user_intr_seq

`endif // HE_MEM_MULTI_USER_INTR_SEQ_SVH
