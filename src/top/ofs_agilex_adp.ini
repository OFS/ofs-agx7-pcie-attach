;; Copyright (C) 2022-2023 Intel Corporation
;; SPDX-License-Identifier: MIT

;; Platform Interface Manager configuration
;;
;; IntelÂ® Agilex adp board
;; OFS FIM
;;
;; Local memory with AXI-MM interface
;;

[define]
PLATFORM_FPGA_FAMILY_AGILEX=1
PLATFORM_FPGA_FAMILY_AGILEX7=1
;; Indicates that ASE emulation of the afu_main interface is offered
ASE_AFU_MAIN_IF_OFFERED=1
native_class=none
;; Early versions of afu_main checked INCLUDE_HSSI_AND_NOT_CVL. When 
;; this macro is set, the presence of HSSI ports in afu_main() is 
;; controlled by INCLUDE_HSSI. 
AFU_MAIN_API_USES_INCLUDE_HSSI=1


[clocks]
pclk_freq=470
native_class=none

[host_chan]
num_ports=top_cfg_pkg::PG_AFU_NUM_PORTS
native_class=native_axis_pcie_tlp
gasket=pcie_ss

;; Minimum number of outstanding flits that must be in flight to
;; saturate bandwidth. Maximum bandwidth is typically a function
;; of the number flits in flight, indepent of burst sizes.
max_bw_active_flits_rd=1024
max_bw_active_flits_wr=128

;; Recommended number of times an AFU should register host channel
;; signals before use in order to make successful timing closure likely.
suggested_timing_reg_stages=0

[local_mem]
native_class=native_axi
gasket=fim_emif_axi_mm
num_banks=mem_ss_pkg::MC_CHANNEL
;; Address width (line-based, ignoring the byte offset within a line)
addr_width=mem_ss_pkg::AXI_MEM_ADDR_WIDTH-$clog2(mem_ss_pkg::AXI_MEM_DATA_WIDTH/8)
data_width=mem_ss_pkg::AXI_MEM_DATA_WIDTH
ecc_width=0
;; For consistency, the PIM always encodes burst width as if the bus were
;; Avalon. Add 1 bit: Avalon burst length is 1-based, AXI is 0-based.
burst_cnt_width=8+1
user_width=mem_ss_pkg::AXI_MEM_USER_WIDTH
rid_width=mem_ss_pkg::AXI_MEM_ID_WIDTH
wid_width=mem_ss_pkg::AXI_MEM_ID_WIDTH
suggested_timing_reg_stages=2

[hssi]
native_class=native_axis_with_fc
num_channels=ofs_fim_eth_plat_if_pkg::MAX_NUM_ETH_CHANNELS

;; Sideband interface specific to this platform. It is used for passing
;; state through plat_ifc.other.ports[] that the PIM does not manage.
[other]
;; Use the PIM's "generic" extension class. The PIM provides the top-level
;; generic wrapper around ports and the implementation of the type is set below.
template_class=generic_templates
native_class=ports
;; All PIM wrappers are vectors. Depending on the data being passed through
;; the interface, FIMs may either use more ports or put vectors inside the
;; port's type.
num_ports=1
;; Data type of the sideband interface
type=ofs_plat_fim_other_if
;; Import the "other" SystemVerilog definitions into the PIM (relative path)
import=../../ofs-common/src/fpga_family/agilex/port_gasket/afu_main_pim/extend_pim/
